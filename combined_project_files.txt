
--- START FILE: combined.py ---

import os

def combine_files_to_single_file(root_dir, output_filename="combined_project_files.txt"):
    """
    Combines the content of all files in a directory into a single file,
    excluding 'node_modules' directories and 'package-lock.json' files.

    Args:
        root_dir (str): The root directory of the project.
        output_filename (str): The name of the output file.
    """
    combined_content = []
    excluded_dirs = ['node_modules', '.git', '.vscode', '.idea', 'dist', 'build']
    excluded_files = ['package-lock.json', 'yarn.lock', 'bun.lockb', '.env'] # Added .env as it might contain sensitive info

    print(f"Starting to combine files from: {root_dir}")
    print(f"Excluding directories: {excluded_dirs}")
    print(f"Excluding files: {excluded_files}")

    for dirpath, dirnames, filenames in os.walk(root_dir):
        # Modify dirnames in-place to skip excluded directories
        dirnames[:] = [d for d in dirnames if d not in excluded_dirs]

        for filename in filenames:
            if filename in excluded_files:
                print(f"Skipping excluded file: {os.path.join(dirpath, filename)}")
                continue

            file_path = os.path.join(dirpath, filename)
            # Make path relative to root_dir for the header
            relative_file_path = os.path.relpath(file_path, root_dir)

            try:
                with open(file_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                combined_content.append(f"\n--- START FILE: {relative_file_path} ---\n\n")
                combined_content.append(content)
                combined_content.append(f"\n\n--- END FILE: {relative_file_path} ---\n")
                print(f"Included file: {relative_file_path}")
            except UnicodeDecodeError:
                print(f"Skipping binary or undecodable file (UnicodeDecodeError): {relative_file_path}")
            except Exception as e:
                print(f"Error reading file {relative_file_path}: {e}")

    output_path = os.path.join(root_dir, output_filename)
    try:
        with open(output_path, 'w', encoding='utf-8') as outfile:
            outfile.write("".join(combined_content))
        print(f"\nSuccessfully combined all files into: {output_path}")
    except Exception as e:
        print(f"Error writing output file {output_path}: {e}")

if __name__ == "__main__":
    # Get the current working directory where the script is run
    # This assumes you run the script from your project's root directory
    project_root = os.getcwd()
    combine_files_to_single_file(project_root)


--- END FILE: combined.py ---

--- START FILE: index.html ---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AstroMaestro AI - Your Cosmic Guide</title>
    <link rel="stylesheet" href="style.css">
    <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Playfair+Display:ital,wght@0,400;0,700;1,400&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <div class="container">
            <h1>AstroMaestro AI</h1>
            <p>Unveiling the Cosmos, Deciphering Your Destiny</p>
        </div>
    </header>

    <nav>
        <div class="container">
            <button id="nav-astrology" onclick="showSection('astrology-section', this)" class="nav-button active">Astrology Report</button>
            <button id="nav-numerology" onclick="showSection('numerology-section', this)" class="nav-button">Numerology Report</button>
            <button id="nav-daily-horoscope" onclick="showSection('daily-horoscope-section', this)" class="nav-button">Daily Horoscope</button>
            <button id="nav-tarot" onclick="showSection('tarot-section', this)" class="nav-button">Tarot Reading</button>
        </div>
    </nav>

    <main class="container">
        <section id="astrology-section" class="active">
            <h2>Your Astrological Blueprint</h2>
            <p>Discover the secrets of your birth chart and unlock insights into your personality, potential, and life path.</p>
            <form id="astrology-form">
                <label for="astro-name">Your Name:</label>
                <input type="text" id="astro-name" required>

                <label for="astro-dob">Date of Birth:</label>
                <input type="date" id="astro-dob" required>

                <label for="astro-tob">Time of Birth:</label>
                <input type="time" id="astro-tob" required>

                <label for="astro-place">Place of Birth (City, Country):</label>
                <input type="text" id="astro-place" placeholder="e.g., London, UK" required>

                <label for="astro-system">Astrology System:</label>
                <select id="astro-system" required>
                    <option value="Western">Western Astrology</option>
                    <option value="Vedic">Vedic (Indian) Astrology</option>
                </select>

                <button type="submit">Generate Astrology Report</button>
            </form>
            <div id="astrology-report-output" class="report-output">
                <h3>Your Cosmic Revelation</h3>
                <div class="report-content"></div>
                <button class="download-pdf-btn hidden" onclick="downloadPdf('astrology')">Download as PDF</button>
            </div>
             <div id="astrology-pdf-template" class="pdf-template hidden">
                <div class="pdf-header">
                    <!-- Ensure this path matches the actual location of logo.png -->
                    <img src="logo.png" alt="AstroMaestro AI Logo" class="pdf-logo">
                    <h2>AstroMaestro AI</h2>
                    <h3>Your Astrological Blueprint</h3>
                </div>
                <div class="pdf-content"></div>
                <div class="pdf-footer">
                    <p>Generated by AstroMaestro AI - Guiding Your Path</p>
                    <p>For educational and entertainment purposes only.</p>
                </div>
            </div>
        </section>

        <section id="numerology-section">
            <h2>Unveiling Your Numbers</h2>
            <p>Explore the vibrational energies of your name and birth date through Chaldean or Pythagorean numerology.</p>
            <form id="numerology-form">
                <label for="nume-name">Your Full Name (as on birth certificate):</label>
                <input type="text" id="nume-name" required>

                <label for="nume-dob">Date of Birth:</label>
                <input type="date" id="nume-dob" required>

                <label for="nume-type">Numerology System:</label>
                <select id="nume-type" required>
                    <option value="Pythagorean">Pythagorean</option>
                    <option value="Chaldean">Chaldean</option>
                </select>

                <button type="submit">Generate Numerology Report</button>
            </form>
            <div id="numerology-report-output" class="report-output">
                <h3>Your Numerical Insight</h3>
                <div class="report-content"></div>
                <button class="download-pdf-btn hidden" onclick="downloadPdf('numerology')">Download as PDF</button>
            </div>
            <div id="numerology-pdf-template" class="pdf-template hidden">
                 <div class="pdf-header">
                    <!-- Ensure this path matches the actual location of logo.png -->
                    <img src="logo.png" alt="AstroMaestro AI Logo" class="pdf-logo">
                    <h2>AstroMaestro AI</h2>
                    <h3>Your Numerological Insight</h3>
                </div>
                <div class="pdf-content"></div>
                <div class="pdf-footer">
                    <p>Generated by AstroMaestro AI - Guiding Your Path</p>
                    <p>For educational and entertainment purposes only.</p>
                </div>
            </div>
        </section>

        <section id="daily-horoscope-section">
            <h2>Your Daily Cosmic Forecast</h2>
            <p>Receive an insightful horoscope for today, guiding your path through the celestial influences.</p>
            <form id="daily-horoscope-form">
                <label for="horo-dob">Your Date of Birth (to determine Zodiac Sign):</label>
                <input type="date" id="horo-dob" required>
                <button type="submit">Get Daily Horoscope</button>
            </form>
            <div id="daily-horoscope-output" class="report-output">
                <h3>Your Daily Insight</h3>
                <div class="report-content"></div>
            </div>
        </section>

        <section id="tarot-section">
            <h2>Unveil Tarot's Wisdom</h2>
            <p>Pose a question or focus on an area of your life, and let the cards illuminate your path.</p>
            <form id="tarot-form">
                <label for="tarot-question">Your Question or Area of Focus:</label>
                <input type="text" id="tarot-question" placeholder="e.g., What should I focus on for personal growth?" required>
                <button type="submit">Draw 3 Cards</button>
            </form>
            <div id="tarot-output" class="report-output">
                <h3>Tarot's Message</h3>
                <div class="report-content"></div>
            </div>
        </section>

    </main>

    <!-- Floating Chat Assistant -->
    <div id="chat-bubble">
        <!-- Lucide Chat Icon (message-circle) - Replaces chat-icon.png -->
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="white" stroke="none" class="lucide-chat-icon-svg"><path d="M7.9 20A9 9 0 1 0 4 16.1L2 22Z"/></svg>
    </div>

    <div id="floating-chat-modal" class="hidden">
        <div class="chat-header">
            <h3>AstroMaestro AI Chat</h3>
            <button id="close-chat-modal-btn">&times;</button>
        </div>
        <div class="chat-container">
            <div id="floating-chat-messages" class="chat-messages">
                <div class="message bot-message">Hello! I am AstroMaestro AI. How may I assist you today regarding your reports or mystical knowledge?</div>
                <div class="message bot-message intro-message">You can ask me about:
                    <ul>
                        <li>Your generated reports</li>
                        <li>Astrological concepts (e.g., "What is a retrograde?")</li>
                        <li>Numerological meanings</li>
                        <li>Or simply "What's my daily horoscope?"</li>
                    </ul>
                </div>
                <!-- ADDED DUMMY MESSAGES FOR SCROLLING TESTING - REMOVE AFTER VERIFICATION -->
                <div class="message user-message">Test message 1</div>
                <div class="message bot-message">Bot reply 1. This is a longer message to ensure it takes up more vertical space and helps with the scrolling test.</div>
                <div class="message user-message">Test message 2</div>
                <div class="message bot-message">Bot reply 2. Even more content to push the boundaries of the chat window and confirm the scrollbar functionality.</div>
                <div class="message user-message">Test message 3</div>
                <div class="message bot-message">Bot reply 3. We are adding many messages to clearly demonstrate that the chat messages container is now correctly scrolling when content exceeds its visible area.</div>
                <div class="message user-message">Test message 4</div>
                <div class="message bot-message">Bot reply 4. The scrollbar should be visible on the right side, allowing you to scroll down and see all these test messages.</div>
                <div class="message user-message">Test message 5</div>
                <div class="message bot-message">Bot reply 5. Final long message to ensure full test.</div>
                <!-- END DUMMY MESSAGES -->
            </div>
            <form id="floating-chat-form">
                <input type="text" id="floating-chat-input" placeholder="Ask your question here..." required>
                <button type="submit">Send</button>
            </form>
        </div>
    </div>


    <!-- Include Google's Generative AI JS SDK -->
    <script type="module">
        // Corrected import path for Google Generative AI Web SDK
        import { GoogleGenerativeAI } from "https://esm.run/@google/generative-ai";

        // IMPORTANT: In a real application, NEVER expose your API key like this.
        // Use a server-side proxy to keep your key secure.
        const API_KEY = "AIzaSyCzx6ReMk8ohPJcCjGwHHzu7SvFccJqAbA"; // Your provided Gemini API Key
        const MODEL_NAME = "gemini-2.5-flash-preview-05-20"; // Updated to a newer, generally available model

        const genAI = new GoogleGenerativeAI(API_KEY);
        const model = genAI.getGenerativeModel({ model: MODEL_NAME });

        window.model = model; // Make the model accessible globally for script.js
    </script>

    <!-- Include jsPDF and html2canvas for PDF generation -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>

    <script src="script.js"></script>
</body>
</html>

--- END FILE: index.html ---

--- START FILE: script.js ---

document.addEventListener('DOMContentLoaded', () => {
    const astrologyForm = document.getElementById('astrology-form');
    const numerologyForm = document.getElementById('numerology-form');
    const dailyHoroscopeForm = document.getElementById('daily-horoscope-form');
    const tarotForm = document.getElementById('tarot-form');

    const astrologyReportOutput = document.getElementById('astrology-report-output');
    const numerologyReportOutput = document.getElementById('numerology-report-output');
    const dailyHoroscopeOutput = document.getElementById('daily-horoscope-output');
    const tarotOutput = document.getElementById('tarot-output');

    // Floating Chat Elements
    const chatBubble = document.getElementById('chat-bubble');
    const floatingChatModal = document.getElementById('floating-chat-modal');
    const closeChatModalBtn = document.getElementById('close-chat-modal-btn');
    const floatingChatMessages = document.getElementById('floating-chat-messages');
    const floatingChatInput = document.getElementById('floating-chat-input');
    const floatingChatForm = document.getElementById('floating-chat-form');


    // Function to switch sections and highlight nav button
    window.showSection = (sectionId, clickedButton) => {
        // Deactivate all sections
        document.querySelectorAll('section').forEach(section => {
            section.classList.remove('active');
        });
        // Deactivate all nav buttons
        document.querySelectorAll('.nav-button').forEach(button => {
            button.classList.remove('active');
        });

        // Activate the selected section
        document.getElementById(sectionId).classList.add('active');
        // Activate the clicked nav button
        if (clickedButton) {
            clickedButton.classList.add('active');
        }
    };

    // Initialize the first section as active and its button
    showSection('astrology-section', document.getElementById('nav-astrology'));

    // Pre-load the logo image to ensure html2canvas can access it
    const preloadImage = (src) => {
        return new Promise((resolve, reject) => {
            const img = new Image();
            img.onload = () => {
                console.log(`Logo image '${src}' preloaded successfully.`);
                resolve();
            };
            img.onerror = (err) => {
                console.error(`Error preloading logo image '${src}':`, err);
                reject(err);
            };
            img.src = src;
        });
    };

    // Preload the logo when the DOM content is loaded
    preloadImage('logo.png').catch(() => {
        console.warn("PDF generation might fail because the logo image could not be preloaded.");
    });


    // --- Astrology Report Generation ---
    astrologyForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const name = document.getElementById('astro-name').value;
        const dob = document.getElementById('astro-dob').value;
        const tob = document.getElementById('astro-tob').value;
        const place = document.getElementById('astro-place').value;
        const astroSystem = document.getElementById('astro-system').value; // Get the selected system

        const reportContentDiv = astrologyReportOutput.querySelector('.report-content');
        reportContentDiv.innerHTML = '<p>Generating your cosmic revelation... Please wait.</p>';
        astrologyReportOutput.classList.add('active');
        astrologyReportOutput.querySelector('.download-pdf-btn').classList.add('hidden'); // Hide download button during generation

        try {
            let astrologyPrompt = `Generate a comprehensive ${astroSystem} astrological birth chart report for ${name}, born on ${dob} at ${tob} in ${place}.`;

            if (astroSystem === 'Vedic') {
                astrologyPrompt += `
                This report should adhere to Vedic (Indian) astrological principles. Include detailed interpretations for:
                - **Planetary Placements (Grahas):** Sun (Surya), Moon (Chandra), Mars (Mangal), Mercury (Budha), Jupiter (Guru), Venus (Shukra), Saturn (Shani), Rahu, and Ketu. For each planet, describe its sign (Rashi) and house (Bhava) placement and its general influence on personality and life areas.
                - **Ascendant (Lagna):** Interpret the rising sign and its profound impact on temperament and physical appearance.
                - **Nakshatras:** For the Moon and Sun, identify their Nakshatra and provide a brief interpretation of its significance.
                - **House (Bhava) Interpretations:** Briefly describe the general significance of each of the 12 houses (Dharmasthanas, Arthasthanas, Kamasthanas, Mokshasthanas) and how the planets placed within them might influence those life areas.
                - **Yogas (Planetary Combinations):** Identify and briefly interpret any prominent beneficial or challenging Yogas formed by planetary combinations (e.g., Dhana Yoga, Raja Yoga, Kemadruma Yoga, Shakata Yoga), if applicable.
                - **General Life Path & Destiny:** Provide an overarching summary of their life purpose, challenges, strengths, and areas of growth based on the complete chart.
                `;
            } else { // Western Astrology
                astrologyPrompt += `
                This report should adhere to Western astrological principles. Include detailed interpretations for:
                - **Planetary Placements:** Sun, Moon, Ascendant, Mercury, Venus, Mars, Jupiter, Saturn, Uranus, Neptune, and Pluto. For each, describe its sign and house placement and its general influence on personality and life areas.
                - **Major Aspects:** Briefly interpret key aspects between planets (e.g., conjunctions, oppositions, squares, trines, sextiles), highlighting their dynamic impact.
                - **House Interpretations:** Describe the general significance of each of the 12 houses and how the planets placed within them might influence those life areas.
                - **Elemental & Modal Balance:** Briefly discuss the balance of elements (Fire, Earth, Air, Water) and modalities (Cardinal, Fixed, Mutable) in the chart and what it suggests about their temperament.
                - **General Life Path & Destiny:** Provide an overarching summary of their life purpose, challenges, strengths, and areas of growth based on the complete chart.
                `;
            }

            astrologyPrompt += `
            Maintain an inspiring, insightful, and mystical tone. Format the output using **Markdown** with clear, bold headings for each section (e.g., "## The Cosmic Core: Sun, Moon & Ascendant", "### Planetary Interpretations"), use bullet points for lists, and bold text for emphasis.`;
            
            const result = await window.model.generateContent(astrologyPrompt);
            const response = await result.response;
            const text = response.text();

            reportContentDiv.innerHTML = marked.parse(text);

            // Append the fixed disclaimer AFTER the AI-generated content
            const disclaimerText = `**Important Note:** This report is generated by an AI based on vast astrological knowledge and patterns. It provides interpretive insights and symbolic guidance. For precise astrological calculations (e.g., exact degrees, specific Dasha periods, precise house cusps) or a visual chart representation (like a Lagna Kundali or Western wheel), consulting a professional astrologer with specialized software is recommended, as this AI does not perform live astronomical calculations or generate visual charts.`;
            const disclaimerP = document.createElement('p');
            disclaimerP.classList.add('ai-disclaimer');
            disclaimerP.innerHTML = marked.parse(disclaimerText); // Parse disclaimer for markdown like bold
            reportContentDiv.appendChild(disclaimerP);


            astrologyReportOutput.querySelector('.download-pdf-btn').classList.remove('hidden');

        } catch (error) {
            console.error('Error generating astrology report:', error);
            reportContentDiv.innerHTML = '<p class="error-message">Failed to generate report. Please try again. (Error: API communication issue)</p>';
            astrologyReportOutput.querySelector('.download-pdf-btn').classList.add('hidden');
        }
    });

    // --- Numerology Report Generation ---
    numerologyForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const name = document.getElementById('nume-name').value;
        const dob = document.getElementById('nume-dob').value;
        const numeType = document.getElementById('nume-type').value;

        const reportContentDiv = numerologyReportOutput.querySelector('.report-content');
        reportContentDiv.innerHTML = '<p>Deciphering your numerical destiny... Please wait.</p>';
        numerologyReportOutput.classList.add('active');
        numerologyReportOutput.querySelector('.download-pdf-btn').classList.add('hidden'); // Hide download button during generation

        try {
            const prompt = `Generate a detailed ${numeType} numerology report for ${name}, born on ${dob}. 
            Calculate and interpret the Life Path Number, Destiny Number (Expression Number), and Soul Urge Number (Heart's Desire Number). 
            Explain what each number means for their personality, talents, challenges, and purpose in life. 
            Provide the calculation steps briefly for each number if possible, or just the resulting number and its interpretation. 
            Maintain an insightful and ancient tone, reflecting the wisdom of numbers. Format the output using **Markdown** with clear headings for each section (e.g., "## Life Path Number", "## Destiny Number", use bullet points for lists, and bold text for emphasis).`;

            const result = await window.model.generateContent(prompt);
            const response = await result.response;
            const text = response.text();

            reportContentDiv.innerHTML = marked.parse(text);

            // Append the fixed disclaimer AFTER the AI-generated content for numerology too
            const disclaimerText = `**Important Note:** This report is generated by an AI based on vast numerological knowledge and patterns. It provides interpretive insights and symbolic guidance. For precise numerical analysis, consulting a professional numerologist is recommended, as this AI does not perform live calculations or generate visual charts.`;
            const disclaimerP = document.createElement('p');
            disclaimerP.classList.add('ai-disclaimer');
            disclaimerP.innerHTML = marked.parse(disclaimerText); // Parse disclaimer for markdown like bold
            reportContentDiv.appendChild(disclaimerP);

            numerologyReportOutput.querySelector('.download-pdf-btn').classList.remove('hidden');

        } catch (error) {
            console.error('Error generating numerology report:', error);
            reportContentDiv.innerHTML = '<p class="error-message">Failed to generate report. Please try again. (Error: API communication issue)</p>';
            numerologyReportOutput.querySelector('.download-pdf-btn').classList.add('hidden');
        }
    });

    // --- Daily Horoscope Generation ---
    const getZodiacSign = (dateString) => {
        const date = new Date(dateString);
        const day = date.getUTCDate();
        const month = date.getUTCMonth() + 1; // Months are 0-indexed

        if ((month == 3 && day >= 21) || (month == 4 && day <= 19)) return "Aries";
        if ((month == 4 && day >= 20) || (month == 5 && day <= 20)) return "Taurus";
        if ((month == 5 && day >= 21) || (month == 6 && day <= 20)) return "Gemini";
        if ((month == 6 && day >= 21) || (month == 7 && day <= 22)) return "Cancer";
        if ((month == 7 && day >= 23) || (month == 8 && day <= 22)) return "Leo";
        if ((month == 8 && day >= 23) || (month == 9 && day <= 22)) return "Virgo";
        if ((month == 9 && day >= 23) || (month == 10 && day <= 22)) return "Libra";
        if ((month == 10 && day >= 23) || (month == 11 && day <= 21)) return "Scorpio";
        if ((month == 11 && day >= 22) || (month == 12 && day <= 21)) return "Sagittarius";
        if ((month == 12 && day >= 22) || (month == 1 && day <= 19)) return "Capricorn";
        if ((month == 1 && day >= 20) || (month == 2 && day <= 18)) return "Aquarius";
        if ((month == 2 && day >= 19) || (month == 3 && day <= 20)) return "Pisces";
        return "Unknown";
    };

    dailyHoroscopeForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const dob = document.getElementById('horo-dob').value;
        const zodiacSign = getZodiacSign(dob);
        const today = new Date().toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });

        const reportContentDiv = dailyHoroscopeOutput.querySelector('.report-content');
        reportContentDiv.innerHTML = '<p>Consulting the stars for your daily forecast... Please wait.</p>';
        dailyHoroscopeOutput.classList.add('active');

        if (zodiacSign === "Unknown") {
            reportContentDiv.innerHTML = '<p class="error-message">Please enter a valid date of birth to determine your Zodiac sign.</p>';
            return;
        }

        try {
            const prompt = `Generate a concise and inspiring daily horoscope for a ${zodiacSign} for today, ${today}. Focus on general themes like career, relationships, and well-being. Make it feel mystical and encouraging. Format the output using **Markdown** with a bold heading for the sign and today's date, and use bullet points or paragraphs for insights.`;

            const result = await window.model.generateContent(prompt);
            const response = await result.response;
            const text = response.text();

            reportContentDiv.innerHTML = marked.parse(text);

        } catch (error) {
            console.error('Error generating daily horoscope:', error);
            reportContentDiv.innerHTML = '<p class="error-message">Failed to generate horoscope. Please try again. (Error: API communication issue)</p>';
        }
    });

    // --- Tarot Reading Generation ---
    tarotForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const question = document.getElementById('tarot-question').value;

        const reportContentDiv = tarotOutput.querySelector('.report-content');
        reportContentDiv.innerHTML = '<p>Drawing the cards of destiny... Please wait.</p>';
        tarotOutput.classList.add('active');

        try {
            const prompt = `You are performing a 3-card Tarot reading (Past/Situation, Present/Challenge, Future/Guidance) for the user's question: "${question}".
            Randomly "select" three plausible Tarot cards (Major or Minor Arcana, indicate if reversed). For each card, provide its name, whether it's reversed, and a brief mystical interpretation relevant to its position (Past, Present, Future).
            Conclude with a concise overall message or guidance.
            Maintain an mystical and insightful tone. Format the output using **Markdown** with clear, bold headings for each card and the overall message. Use bullet points for interpretations if helpful.`;

            const result = await window.model.generateContent(prompt);
            const response = await result.response;
            const text = response.text();

            reportContentDiv.innerHTML = marked.parse(text);

        } catch (error) {
            console.error('Error generating tarot reading:', error);
            reportContentDiv.innerHTML = '<p class="error-message">Failed to perform reading. Please try again. (Error: API communication issue)</p>';
        }
    });

    // --- Floating AI Chat Assistant ---
    chatBubble.addEventListener('click', () => {
        floatingChatModal.classList.toggle('hidden');
        if (!floatingChatModal.classList.contains('hidden')) {
            floatingChatInput.focus(); // Focus input when chat opens
            floatingChatMessages.scrollTop = floatingChatMessages.scrollHeight; // Scroll to bottom
        }
    });

    closeChatModalBtn.addEventListener('click', () => {
        floatingChatModal.classList.add('hidden');
    });

    floatingChatForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const userMessage = floatingChatInput.value.trim();
        if (!userMessage) return;

        const userMsgDiv = document.createElement('div');
        userMsgDiv.classList.add('message', 'user-message');
        userMsgDiv.textContent = userMessage;
        floatingChatMessages.appendChild(userMsgDiv);
        floatingChatMessages.scrollTop = floatingChatMessages.scrollHeight;

        floatingChatInput.value = '';

        const typingIndicator = document.createElement('div');
        typingIndicator.classList.add('message', 'bot-message');
        typingIndicator.innerHTML = '<em>AstroMaestro AI is thinking...</em>';
        floatingChatMessages.appendChild(typingIndicator);
        floatingChatMessages.scrollTop = floatingChatMessages.scrollHeight;

        try {
            // Updated prompt to make AI more versatile and suggest daily horoscope
            const prompt = `You are AstroMaestro AI, an expert and mystical guide in astrology, numerology, and general mystical knowledge. You can also provide concise daily general horoscopes if asked. Provide concise, helpful, and insightful answers. If the question is about a personal report, phrase it generally as you do not retain memory of specific user reports. Format your response using **Markdown** (e.g., bold for keywords, bullet points for lists if applicable).
            User's question: "${userMessage}"`;

            const result = await window.model.generateContent(prompt);
            const response = await result.response;
            const botReply = response.text();

            floatingChatMessages.removeChild(typingIndicator);

            const botMsgDiv = document.createElement('div');
            botMsgDiv.classList.add('message', 'bot-message');
            botMsgDiv.innerHTML = marked.parse(botReply);
            floatingChatMessages.appendChild(botMsgDiv);
            floatingChatMessages.scrollTop = floatingChatMessages.scrollHeight;

        } catch (error) {
            console.error('Error in chat assistant:', error);
            floatingChatMessages.removeChild(typingIndicator);
            const errorMsgDiv = document.createElement('div');
            errorMsgDiv.classList.add('message', 'bot-message');
            errorMsgDiv.innerHTML = '<em>Apologies, I encountered a cosmic disturbance. Please try again.</em>';
            floatingChatMessages.appendChild(errorMsgDiv);
            floatingChatMessages.scrollTop = floatingChatMessages.scrollHeight;
        }
    });

    // --- PDF Download Functionality ---
    window.downloadPdf = async (reportType) => {
        let contentDivId, templateDivId, filename;
        if (reportType === 'astrology') {
            contentDivId = 'astrology-report-output';
            templateDivId = 'astrology-pdf-template';
            filename = 'AstroMaestro_Astrology_Report.pdf';
        } else if (reportType === 'numerology') {
            contentDivId = 'numerology-report-output';
            templateDivId = 'numerology-pdf-template';
            filename = 'AstroMaestro_Numerology_Report.pdf';
        } else {
            return;
        }

        const reportOutputHTML = document.getElementById(contentDivId).querySelector('.report-content').innerHTML;
        const pdfTemplate = document.getElementById(templateDivId);
        pdfTemplate.querySelector('.pdf-content').innerHTML = reportOutputHTML;

        // Temporarily make the template visible off-screen for html2canvas to render
        pdfTemplate.classList.remove('hidden'); 
        pdfTemplate.style.display = 'block';
        pdfTemplate.style.position = 'absolute';
        pdfTemplate.style.left = '-9999px';

        try {
            const canvas = await html2canvas(pdfTemplate, {
                scale: 3, // Increased scale for better resolution in PDF
                useCORS: true,
                logging: false,
                imageTimeout: 15000 // Increase timeout for images to load (in milliseconds)
            });

            console.log('html2canvas output dimensions: ', canvas.width, 'x', canvas.height);

            if (canvas.width === 0 || canvas.height === 0) {
                throw new Error("html2canvas produced a canvas with zero dimensions. This often means images failed to load or the element had no computable size.");
            }

            // Re-hide the template (original display:none will be applied by the class)
            pdfTemplate.style.display = 'none'; // Set to none immediately, then re-add hidden class
            pdfTemplate.style.position = 'static';
            pdfTemplate.classList.add('hidden'); // Re-add the hidden class

            const imgData = canvas.toDataURL('image/jpeg', 0.9); // Use JPEG with 90% quality
            const { jsPDF } = window.jspdf;
            const pdf = new jsPDF('p', 'mm', 'a4'); // Portrait, millimeters, A4 size

            const imgWidth = 210; // A4 width in mm
            const pageHeight = 297; // A4 height in mm
            const imgHeight = (canvas.height * imgWidth) / canvas.width; // Height of the image stretched to A4 width

            console.log('PDF addImage dimensions: ', imgWidth, 'x', imgHeight);

            if (isNaN(imgWidth) || isNaN(imgHeight) || imgWidth <= 0 || imgHeight <= 0) {
                 throw new Error("Calculated PDF image dimensions are invalid (zero, negative, or NaN).");
            }


            let heightLeft = imgHeight;
            let position = 0; // Tracks the current Y offset for adding image slice

            // First page
            pdf.addImage(imgData, 'JPEG', 0, position, imgWidth, imgHeight);
            heightLeft -= pageHeight;

            // Subsequent pages
            while (heightLeft > 0) {
                position = position - pageHeight; // Shift the position up by one page height
                pdf.addPage();
                pdf.addImage(imgData, 'JPEG', 0, position, imgWidth, imgHeight);
                heightLeft -= pageHeight;
            }

            pdf.save(filename);
            console.log("PDF generated successfully!");

        } catch (error) {
            console.error('Error generating PDF:', error);
            alert(`Failed to generate PDF. Please try again or check console for details. Error: ${error.message || error}`);
        } finally {
             // Ensure template is hidden even on error, and hidden class is back
            pdfTemplate.style.display = 'none';
            pdfTemplate.style.position = 'static';
            pdfTemplate.classList.add('hidden'); // Ensure hidden class is added back
        }
    };
});

--- END FILE: script.js ---

--- START FILE: style.css ---

/* Basic Reset & Body Styling */
/* Added global box-sizing for consistent layout behavior */
*, *::before, *::after {
  box-sizing: border-box;
}

body {
    font-family: 'Playfair Display', serif;
    margin: 0;
    padding: 0;
    background: linear-gradient(to bottom right, #0a0e1c, #1a0f2e, #2c1240); /* Deep cosmic gradient */
    color: #f0e6da; /* Off-white for readability */
    line-height: 1.6;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

.container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 20px;
}

/* Header */
header {
    background: rgba(0, 0, 0, 0.4);
    padding: 30px 0;
    text-align: center;
    border-bottom: 1px solid rgba(138, 43, 226, 0.3); /* Amethyst line */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

header h1 {
    font-family: 'Cinzel', serif;
    font-size: 3.5em;
    color: #e6c78e; /* Gold */
    text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.7);
    margin-bottom: 5px;
}

header p {
    font-size: 1.2em;
    font-style: italic;
    color: #d1b19a;
}

/* Navigation */
nav {
    background: rgba(0, 0, 0, 0.5);
    padding: 15px 0;
    text-align: center;
    border-bottom: 1px solid rgba(138, 43, 226, 0.3);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

nav .nav-button {
    background: #8a2be2; /* Amethyst */
    color: #f0e6da;
    border: none;
    padding: 12px 25px;
    margin: 0 10px;
    border-radius: 30px;
    cursor: pointer;
    font-family: 'Cinzel', serif;
    font-size: 1.1em;
    transition: background 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
}

nav .nav-button:hover {
    background: #9932cc; /* Darker amethyst */
    transform: translateY(-2px);
}

nav .nav-button:active {
    transform: translateY(0);
}

nav .nav-button.active {
    background: #e6c78e; /* Gold for active button */
    color: #1a0f2e; /* Dark text for active button */
    box-shadow: 0 4px 10px rgba(230, 199, 142, 0.5); /* Glowing effect */
    transform: translateY(-1px);
}

/* Main Content Sections */
main {
    flex-grow: 1; /* Allows main content to expand */
    padding-top: 30px;
    padding-bottom: 50px;
}

section {
    background: rgba(10, 10, 20, 0.7); /* Slightly transparent dark background */
    border-radius: 15px;
    padding: 40px;
    margin-bottom: 30px;
    border: 1px solid rgba(138, 43, 226, 0.4);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);
    display: none; /* Hidden by default */
}

section.active {
    display: block; /* Show active section */
}

section h2 {
    font-family: 'Cinzel', serif;
    font-size: 2.5em;
    color: #e6c78e;
    text-align: center;
    margin-bottom: 20px;
    text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
}

section p {
    text-align: center;
    margin-bottom: 30px;
    font-size: 1.1em;
    color: #ccc;
}

/* Forms */
form {
    display: flex;
    flex-direction: column;
    gap: 15px;
    max-width: 600px;
    margin: 0 auto;
}

form label {
    font-family: 'Cinzel', serif;
    font-size: 1.1em;
    color: #d1b19a;
    margin-bottom: 5px;
}

form input[type="text"],
form input[type="date"],
form input[type="time"],
form select {
    padding: 12px 15px;
    border: 1px solid #8a2be2;
    border-radius: 8px;
    background: rgba(255, 255, 255, 0.1);
    color: #f0e6da;
    font-size: 1em;
    outline: none;
    transition: border-color 0.3s ease;
}

form input[type="text"]:focus,
form input[type="date"]:focus,
form input[type="time"]:focus,
form select:focus {
    border-color: #e6c78e;
    box-shadow: 0 0 8px rgba(230, 199, 142, 0.5);
}

/* Placeholder color for inputs */
form input::placeholder {
    color: #a090a0;
}

/* For date and time inputs in some browsers, colors might need specific overrides */
input[type="date"]::-webkit-calendar-picker-indicator,
input[type="time"]::-webkit-calendar-picker-indicator {
    filter: invert(1); /* Makes the icon white */
}


form button[type="submit"] {
    background: #e6c78e; /* Gold */
    color: #1a0f2e; /* Deep purple */
    border: none;
    padding: 15px 30px;
    border-radius: 30px;
    cursor: pointer;
    font-family: 'Cinzel', serif;
    font-size: 1.2em;
    margin-top: 20px;
    transition: background 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

form button[type="submit"]:hover {
    background: #f0d4a7; /* Lighter gold */
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);
}

/* Report Output */
.report-output {
    background: rgba(0, 0, 0, 0.4);
    border: 1px solid rgba(230, 199, 142, 0.5); /* Gold border */
    border-radius: 10px;
    margin-top: 40px;
    padding: 30px;
    box-shadow: inset 0 0 15px rgba(230, 199, 142, 0.2);
    min-height: 200px;
    display: none; /* Hidden by default */
    position: relative;
}

.report-output.active {
    display: block;
}

.report-output h3 {
    font-family: 'Cinzel', serif;
    color: #e6c78e;
    font-size: 2em;
    text-align: center;
    margin-bottom: 25px;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.6);
}

.report-content {
    font-size: 1.1em;
    color: #f0e6da;
    line-height: 1.8;
    white-space: pre-wrap; /* Preserves line breaks from AI output */
    overflow-y: auto;
    max-height: 400px; /* Limit height for long reports */
    padding-right: 15px; /* Space for scrollbar */
}

/* Scrollbar styling */
.report-content::-webkit-scrollbar {
    width: 8px;
}
.report-content::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 10px;
}
.report-content::-webkit-scrollbar-thumb {
    background: #8a2be2;
    border-radius: 10px;
}
.report-content::-webkit-scrollbar-thumb:hover {
    background: #9932cc;
}


.download-pdf-btn {
    background: #28a745; /* Green for download */
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 20px;
    cursor: pointer;
    font-family: 'Cinzel', serif;
    font-size: 1em;
    margin-top: 25px;
    display: block;
    margin-left: auto;
    margin-right: auto;
    transition: background 0.3s ease;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
}

.download-pdf-btn:hover {
    background: #218838;
}

.hidden {
    display: none !important;
}

/* Floating Chat Assistant */
#chat-bubble {
    position: fixed;
    bottom: 30px;
    right: 30px;
    width: 60px;
    height: 60px;
    background: #e6c78e; /* Gold bubble */
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
    z-index: 1000; /* Ensure it's on top */
    transition: transform 0.3s ease, background 0.3s ease;
}

#chat-bubble:hover {
    transform: scale(1.05);
    background: #f0d4a7; /* Lighter gold */
}

#chat-bubble .lucide-chat-icon-svg { /* Updated selector for SVG icon */
    width: 35px; /* Adjust size of the SVG icon */
    height: 35px;
    /* fill is set to white directly in the SVG */
    /* Removed filter: invert(1); as it's no longer needed for SVG */
}

#floating-chat-modal {
    position: fixed;
    bottom: 100px; /* Above the bubble */
    right: 30px;
    width: 350px;
    height: 500px;
    background: rgba(10, 10, 20, 0.95); /* Slightly transparent dark background */
    border: 1px solid rgba(138, 43, 226, 0.6);
    border-radius: 15px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.7);
    z-index: 1000;
    display: flex;
    flex-direction: column;
    overflow: hidden; /* Contains inner elements */
}

.chat-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: rgba(138, 43, 226, 0.7); /* Amethyst header */
    padding: 10px 15px;
    border-top-left-radius: 15px;
    border-top-right-radius: 15px;
    color: #f0e6da;
    font-family: 'Cinzel', serif;
    font-size: 1.1em;
}

.chat-header h3 {
    margin: 0;
    font-size: 1.2em;
}

#close-chat-modal-btn {
    background: none;
    border: none;
    color: #f0e6da;
    font-size: 1.8em;
    cursor: pointer;
    padding: 0 5px;
    line-height: 1;
    transition: color 0.2s ease;
}

#close-chat-modal-btn:hover {
    color: #e6c78e;
}

.chat-container { /* Reused for the modal's internal structure */
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    padding: 15px;
}

#floating-chat-messages {
    flex-grow: 1;
    overflow-y: auto;
    padding-right: 10px; /* Space for scrollbar */
    margin-bottom: 15px;
    min-height: 0; /* Ensures proper scrolling within flex container */
}

/* Chat message styling */
.message {
    padding: 10px 15px;
    border-radius: 15px;
    margin-bottom: 10px;
    max-width: 85%;
    word-wrap: break-word;
    font-size: 0.95em;
    line-height: 1.5;
}

.user-message {
    background: #8a2be2; /* Amethyst for user */
    align-self: flex-end;
    margin-left: auto;
    text-align: right;
}

.bot-message {
    background: #333; /* Darker grey for bot */
    align-self: flex-start;
    margin-right: auto;
    border: 1px solid #555;
}

.bot-message.intro-message {
    font-style: italic;
    color: #d1b19a;
    background: rgba(51, 51, 51, 0.7);
    border: 1px solid rgba(85, 85, 85, 0.7);
    font-size: 0.9em;
}

.bot-message ul {
    list-style-type: disc;
    margin-left: 20px;
    padding-left: 0;
    margin-top: 5px;
}
.bot-message li {
    margin-bottom: 3px;
}


#floating-chat-form {
    display: flex;
    gap: 10px;
    padding-top: 10px;
    border-top: 1px solid rgba(138, 43, 226, 0.3);
}

#floating-chat-input {
    flex-grow: 1;
    padding: 12px 15px;
    border: 1px solid #8a2be2;
    border-radius: 25px;
    background: rgba(255, 255, 255, 0.1);
    color: #f0e6da;
    font-size: 1em;
    outline: none;
}

#floating-chat-form button {
    background: #e6c78e;
    color: #1a0f2e;
    border: none;
    padding: 12px 25px;
    border-radius: 25px;
    cursor: pointer;
    font-family: 'Cinzel', serif;
    font-size: 1em;
    transition: background 0.3s ease;
}

#floating-chat-form button:hover {
    background: #f0d4a7;
}

/* Footer */
footer {
    background: rgba(0, 0, 0, 0.4);
    padding: 20px 0;
    text-align: center;
    border-top: 1px solid rgba(138, 43, 226, 0.3);
    color: #ccc;
    font-size: 0.9em;
    margin-top: auto; /* Pushes footer to the bottom */
}

footer p {
    margin: 5px 0;
}

/* PDF Template Styling (Hidden on regular page) */
.pdf-template {
    background: #f0e6da; /* Light background for PDF */
    color: #1a0f2e; /* Dark text for PDF */
    font-family: 'Playfair Display', serif;
    padding: 40px;
    box-sizing: border-box; /* Include padding in element's total width and height */
    width: 210mm; /* A4 width */
    min-height: 297mm; /* A4 height */
}

.pdf-header {
    text-align: center;
    margin-bottom: 30px;
    border-bottom: 2px solid #8a2be2;
    padding-bottom: 20px;
}

.pdf-logo {
    width: 80px;
    height: 80px;
    display: block;
    margin: 0 auto 10px;
}

.pdf-header h2 {
    font-family: 'Cinzel', serif;
    color: #8a2be2;
    font-size: 2.8em;
    margin: 0;
}

.pdf-header h3 {
    font-family: 'Playfair Display', serif;
    color: #e6c78e;
    font-size: 1.5em;
    margin: 5px 0 0;
    font-style: italic;
}

.pdf-content {
    font-size: 1.1em;
    line-height: 1.7;
    text-align: justify;
    padding: 0 20px;
}

.pdf-content p {
    margin-bottom: 1em;
}

.pdf-footer {
    text-align: center;
    margin-top: 40px;
    padding-top: 20px;
    border-top: 1px solid #ccc;
    font-size: 0.9em;
    color: #555;
}

/* Report Content & Chat Message General Text Styling */
.report-content,
.chat-messages .message {
    font-size: 1.1em;
    color: #f0e6da;
    line-height: 1.8;
}

/* Markdown Headings in Reports and Chat */
.report-content h1,
.report-content h2,
.report-content h3,
.chat-messages .message h1,
.chat-messages .message h2,
.chat-messages .message h3 {
    font-family: 'Cinzel', serif;
    color: #e6c78e; /* Gold */
    margin-top: 1.5em;
    margin-bottom: 0.8em;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
    line-height: 1.3;
}

.report-content h1,
.chat-messages .message h1 { font-size: 2em; text-align: center; } /* Main report titles within content */
.report-content h2,
.chat-messages .message h2 { font-size: 1.8em; }
.report-content h3,
.chat-messages .message h3 { font-size: 1.5em; }

/* Paragraphs */
.report-content p,
.chat-messages .message p {
    margin-bottom: 1em;
}

/* Lists */
.report-content ul,
.report-content ol,
.chat-messages .message ul,
.chat-messages .message ol {
    margin-left: 20px;
    margin-bottom: 1em;
    padding-left: 10px;
}

.report-content li,
.chat-messages .message li {
    margin-bottom: 0.5em;
}

/* Strong/Bold text */
.report-content strong,
.chat-messages .message strong {
    color: #e6c78e; /* Make bold text gold for emphasis */
    font-weight: 700; /* Ensure it's truly bold */
}

/* Emphasis/Italic text */
.report-content em,
.chat-messages .message em {
    color: #d1b19a; /* A slightly softer gold/bronze for italics */
    font-style: italic;
}

/* Blockquotes */
.report-content blockquote,
.chat-messages .message blockquote {
    border-left: 4px solid #8a2be2; /* Amethyst border */
    padding-left: 15px;
    margin: 1em 0;
    font-style: italic;
    color: #bbb;
}

/* Code blocks (if used by AI) */
.report-content pre,
.chat-messages .message pre {
    background: rgba(0, 0, 0, 0.6);
    padding: 10px;
    border-radius: 5px;
    overflow-x: auto;
    font-family: monospace;
    font-size: 0.9em;
    border: 1px solid rgba(138, 43, 226, 0.3);
}

.report-content code,
.chat-messages .message code {
    background: rgba(138, 43, 226, 0.2);
    padding: 2px 4px;
    border-radius: 3px;
    font-family: monospace;
    color: #f0e6da;
}

/* Adjustments for PDF template to ensure markdown also looks good */
.pdf-content h1,
.pdf-content h2,
.pdf-content h3 {
    font-family: 'Cinzel', serif;
    color: #8a2be2; /* Amethyst for headings in PDF */
    margin-top: 1.2em;
    margin-bottom: 0.6em;
}
.pdf-content h1 { font-size: 2.2em; text-align: center; }
.pdf-content h2 { font-size: 1.8em; }
.pdf-content h3 { font-size: 1.5em; }

.pdf-content p {
    margin-bottom: 0.8em;
    color: #333; /* Darker text for readability in PDF */
}

.pdf-content ul,
.pdf-content ol {
    margin-left: 25px;
    margin-bottom: 0.8em;
    color: #333;
}

.pdf-content li {
    margin-bottom: 0.4em;
}

.pdf-content strong {
    font-weight: bold;
    color: #8a2be2; /* Amethyst for bold in PDF */
}

.pdf-content em {
    font-style: italic;
    color: #555;
}

.pdf-content blockquote {
    border-left: 4px solid #8a2be2;
    padding-left: 15px;
    margin: 1em 0;
    font-style: italic;
    color: #666;
}
.pdf-content pre {
    background: #eee;
    padding: 10px;
    border-radius: 5px;
    overflow-x: auto;
    font-family: monospace;
    font-size: 0.9em;
    border: 1px solid #ccc;
    color: #333;
}
.pdf-content code {
    background: #e0e0e0;
    padding: 2px 4px;
    border-radius: 3px;
    font-family: monospace;
    color: #333;
}


/* --- Mobile Responsiveness --- */

/* Small tablets and larger phones (up to 768px) */
@media screen and (max-width: 768px) {
    .container {
        padding: 15px;
    }

    header h1 {
        font-size: 2.8em;
    }

    header p {
        font-size: 1em;
    }

    nav .nav-button {
        padding: 10px 20px;
        margin: 5px;
        font-size: 1em;
    }

    section {
        padding: 25px;
        margin-bottom: 20px;
    }

    section h2 {
        font-size: 2em;
    }

    section p {
        font-size: 1em;
    }

    form {
        gap: 12px;
    }

    form label {
        font-size: 1em;
    }

    form input,
    form select {
        padding: 10px 12px;
        font-size: 0.95em;
    }

    form button[type="submit"] {
        padding: 12px 25px;
        font-size: 1.1em;
    }

    .report-output {
        padding: 20px;
    }

    .report-output h3 {
        font-size: 1.8em;
    }

    .report-content {
        font-size: 1em;
        line-height: 1.7;
        max-height: 350px; /* Adjust max-height for smaller screens */
    }

    .floating-chat-modal {
        width: 90%;
        right: 5%;
        left: 5%;
        bottom: 90px;
        height: 400px;
    }

    #chat-bubble {
        bottom: 20px;
        right: 20px;
        width: 50px;
        height: 50px;
    }
    #chat-bubble .lucide-chat-icon-svg { /* Updated selector for SVG icon */
        width: 30px;
        height: 30px;
    }
}

/* Smaller phones (up to 480px) */
@media screen and (max-width: 480px) {
    .container {
        padding: 10px;
    }

    header {
        padding: 20px 0;
    }

    header h1 {
        font-size: 2em;
    }

    header p {
        font-size: 0.9em;
    }

    nav .container {
        display: flex;
        flex-direction: column; /* Stack buttons vertically */
        gap: 10px;
    }

    nav .nav-button {
        width: calc(100% - 20px); /* Full width minus padding */
        margin: 0; /* Remove horizontal margin */
        font-size: 0.9em;
        padding: 10px;
    }

    section {
        padding: 15px;
    }

    section h2 {
        font-size: 1.5em;
    }

    section p {
        font-size: 0.9em;
        margin-bottom: 20px;
    }

    form {
        gap: 10px;
    }

    form label {
        font-size: 0.9em;
    }

    form input,
    form select {
        padding: 8px 10px;
        font-size: 0.9em;
    }

    form button[type="submit"] {
        padding: 10px 20px;
        font-size: 1em;
    }

    .report-output {
        padding: 15px;
    }

    .report-output h3 {
        font-size: 1.5em;
    }

    .report-content {
        font-size: 0.9em;
        line-height: 1.6;
        max-height: 300px; /* Further adjust max-height */
    }

    .download-pdf-btn {
        padding: 8px 15px;
        font-size: 0.9em;
    }

    .floating-chat-modal {
        height: 350px; /* Even smaller chat height */
        bottom: 80px;
    }

    .message {
        padding: 7px 10px;
        font-size: 0.85em;
        max-width: 90%; /* Allow messages to take more width */
    }

    #floating-chat-form {
        flex-direction: column; /* Stack chat input and button */
        gap: 8px;
    }

    #floating-chat-input {
        padding: 8px 10px;
        font-size: 0.9em;
        border-radius: 20px;
    }

    #floating-chat-form button {
        padding: 8px 15px;
        font-size: 0.9em;
        border-radius: 20px;
    }

    footer {
        padding: 15px 0;
        font-size: 0.8em;
    }
}

/* New style for the fixed AI disclaimer in reports */
.ai-disclaimer {
    font-size: 0.9em;
    color: #a0a0a0; /* Softer grey */
    text-align: center;
    margin-top: 30px; /* Space it out from the report content */
    padding-top: 20px;
    border-top: 1px dashed rgba(138, 43, 226, 0.3); /* A subtle divider */
    font-style: italic;
    line-height: 1.5;
}

/* Ensure markdown within the disclaimer also looks good */
.ai-disclaimer strong {
    color: #e6c78e; /* Gold for bold within disclaimer */
    font-weight: bold;
}

/* Also apply to PDF version of the disclaimer */
.pdf-content .ai-disclaimer {
    color: #555; /* Darker grey for PDF readability */
    border-top: 1px dashed #ccc;
}

.pdf-content .ai-disclaimer strong {
    color: #8a2be2; /* Amethyst for bold in PDF disclaimer */
}

--- END FILE: style.css ---

--------------------------------------------------------------------------------------

there are issues with the chat with ai feature so fix that. make it perfect.